name: Main workflow

# The event triggers are configured as following:
# - on branch master, trigger the workflow on every push
# - on any pull request, trigger the workflow
# This is to avoid running the workflow twice on pull requests.
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build_lint_and_test:
    runs-on: ubuntu-latest

    # https://github.com/bahmutov/cypress-gh-action-split-install/blob/ca3916d4e7240ebdc337825d2d78eb354855464b/.github/workflows/tests.yml#L8-L11
    env:
      # prevents extra Cypress installation progress messages
      CI: 1
      # avoid warnings like "tput: No value for $TERM and no -T specified"
      TERM: xterm

    steps:
      - name: Checkout
        if: github.ref != 'refs/heads/master'
        uses: actions/checkout@v2

      - name: Checkout
        if: github.ref == 'refs/heads/master'
        uses: actions/checkout@v2
        with:
          # TL;DR: On master branch we check out the code using a depth of 50 commits.
          # This is necessary to allow Lerna to properly detect the latest tag in order
          # to determine the new canary version.
          # See related issue (https://github.com/lerna/lerna/issues/1769).
          # Longer explanation: Lerna uses `git describe` to determine the published
          # previous version. Since a normal checkout performs a shallow git clone
          # with the depth of 1 commit, `git describe` might not find a tag in the last
          # commit, thus returning `null`. This causes Lerna to attempt to release the
          # version `null-canary.0`, which is wrong.
          # To amend to that, we force a checkout with a bigger depth (like 50).
          # Note: this means that if we have merged >50 PRs since the last release,
          # the canary will fail again for the reasons above.
          # We could set `fetch-depth: 0`, but that would cause the entire history
          # to be cloned. Using 50 seems like a good balance to start with.
          fetch-depth: 50

      # https://github.com/actions/checkout#fetch-all-tags
      - name: Fetch all tags (for canary releases)
        if: github.ref == 'refs/heads/master'
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm

      - name: Setup Node (uses version in .nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        env:
          # https://github.com/bahmutov/cypress-gh-action-split-install/blob/ca3916d4e7240ebdc337825d2d78eb354855464b/.github/workflows/tests.yml#L14-L18
          # https://github.com/marketplace/actions/cypress-io#custom-install
          CYPRESS_INSTALL_BINARY: 0

      - name: Lint text files
        run: yarn run jest --projects jest.{eslint,stylelint,test,text}.config.js --maxWorkers=3 --reporters jest-silent-reporter

      - name: Building websites for production
        run: yarn build
        env:
          ENABLE_SEARCH: 'true'

      - name: Running Visual Regression Tests
        uses: percy/snapshot-action@v0.1.1
        with:
          build-directory: public
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_SMOKE_TESTS }}

      # https://github.com/bahmutov/cypress-gh-action-split-install/blob/ca3916d4e7240ebdc337825d2d78eb354855464b/.github/workflows/tests.yml#L23-L30
      # https://github.com/marketplace/actions/cypress-io#custom-install
      - name: Restoring Cypress cache
        # restore / cache the binary ourselves on Linux
        # see https://github.com/actions/cache
        id: cache-cypress
        uses: actions/cache@v1
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/package.json') }}

      - name: Installing Cypress binary
        run: yarn run cypress install && yarn run cypress cache list

      - name: Running End-to-End tests
        run: yarn run start-server-and-test 'yarn run serve -l 8000 -n public' 'http://localhost:8000/docs-smoke-test' 'yarn run percy exec -- yarn run cypress run'
        env:
          NODE_ENV: test
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_SMOKE_TESTS_E2E }}
          CYPRESS_CI: "true"

      - name: Uploading Cypress artifacts
        # Test run video was always captured, so this action uses "always()" condition
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@master
        with:
          publish: yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Publish canary releases only if the packages weren't published already
      - name: Publishing canary releases to npm registry
        if: github.ref == 'refs/heads/master' && steps.changesets.outputs.published != 'true'
        run: ./scripts/release_canary.sh
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
