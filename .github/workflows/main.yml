name: Main workflow

# The event triggers are configured as following:
# - on branch main, trigger the workflow on every push to trigger production checks and deployment
# - on any pull request, trigger the workflow
# This is to avoid running the workflow twice on pull requests.

# TODO separate production and PR deployments (e.g. main does not need to run the tests after build and deployment)
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build_deploy_test:
    runs-on: ubuntu-latest

    # https://github.com/bahmutov/cypress-gh-action-split-install/blob/ca3916d4e7240ebdc337825d2d78eb354855464b/.github/workflows/tests.yml#L8-L11
    env:
      # prevents extra Cypress installation progress messages
      CI: 1
      # avoid warnings like "tput: No value for $TERM and no -T specified"
      TERM: xterm

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node (uses version in .nvmrc)
        uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'

      - uses: actions/cache@v2
        with:
          path: |
            .cache
            public
          key: ${{ runner.os }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Set custom Yarn cache path
        run: yarn config set cacheFolder .cache/yarn

      - name: Install dependencies
        run: yarn install --immutable
        env:
          # https://github.com/bahmutov/cypress-gh-action-split-install/blob/ca3916d4e7240ebdc337825d2d78eb354855464b/.github/workflows/tests.yml#L14-L18
          # https://github.com/marketplace/actions/cypress-io#custom-install
          CYPRESS_INSTALL_BINARY: 0

      - name: Building websites for production
        run: yarn build
        env:
          ENABLE_SEARCH: 'true'

      - name: Initialize Deployment
        uses: bobheadxi/deployments@v0.6.2
        id: start-deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ github.ref_name }}

      - name: Deploy to Vercel
        id: deploy-to-vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-project-name: commercetools-docs-kit
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # vercel-args: '--prod'  # TODO only of on main branch
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          alias-domains: | #Optional
            docs-kit-sha-${{ github.sha }}-commercetools.vercel.app
            docs-kit-pr-{{PR_NUMBER}}-commercetools.vercel.app
            docs-kit-branch-{{BRANCH}}-commercetools.vercel.app

      - name: Update Deployment Status
        uses: bobheadxi/deployments@v0.6.2
        id: finish_deployment
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          env_url: ${{ steps.deploy-to-vercel.outputs.preview-url }}
          deployment_id: ${{ steps.start-deployment.outputs.deployment_id }}

      # TODO move this into a separate workflow that holds the static checks only? They can run independently of builds
      - name: Lint text files
        run: yarn run jest --projects jest.{eslint,stylelint,test,text}.config.js --maxWorkers=3 --reporters jest-silent-reporter

      # Tests run after deployment to make sure a preview URL is available for every build
      # TODO maybe just stop the job here when on the main branch?
      - name: Running Visual Regression Tests
        run: yarn percy snapshot ./public
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_SMOKE_TESTS }}

      # https://github.com/bahmutov/cypress-gh-action-split-install/blob/ca3916d4e7240ebdc337825d2d78eb354855464b/.github/workflows/tests.yml#L23-L30
      # https://github.com/marketplace/actions/cypress-io#custom-install
      - name: Restoring Cypress cache
        # restore / cache the binary ourselves on Linux
        # see https://github.com/actions/cache
        id: cache-cypress
        uses: actions/cache@v2
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/package.json') }}

      - name: Installing Cypress binary
        run: yarn run cypress install && yarn run cypress cache list

      - name: Running End-to-End tests
        run: yarn run start-server-and-test 'yarn run serve -l 8000 -n public' 'http://localhost:8000/docs-smoke-test' 'yarn run percy exec -- yarn test:e2e:docs-smoke-test'
        env:
          NODE_ENV: test
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_SMOKE_TESTS_E2E }}
          CYPRESS_CI: 'true'

      - name: Running API End-to-End tests
        run: yarn run start-server-and-test 'yarn run serve -l 8000 -n public' 'http://localhost:8000/api-docs-smoke-test' 'yarn run percy exec -- yarn test:e2e:api-docs-smoke-test'
        env:
          NODE_ENV: test
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_API_SMOKE_TESTS_E2E }}
          CYPRESS_CI: 'true'

      - name: Uploading Cypress artifacts
        # Test run video was always captured, so this action uses "always()" condition
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos
