name: Main workflow
# The event triggers are configured as following:
# - on branch main, trigger the workflow on every push to trigger production checks and deployment
# - on any pull request, trigger the workflow
# This is to avoid running the workflow twice on pull requests.
on:
  push:
    branches:
      - main
  merge_group:
    branches: [main]
  pull_request:
  repository_dispatch:
    types: [manual-build-and-deploy]

jobs:
  build_deploy_test:
    runs-on: ubuntu-latest

    # https://github.com/bahmutov/cypress-gh-action-split-install/blob/ca3916d4e7240ebdc337825d2d78eb354855464b/.github/workflows/tests.yml#L8-L11
    env:
      # prevents extra Cypress installation progress messages (github action default is true)
      CI: 1
      # avoid warnings like "tput: No value for $TERM and no -T specified"
      TERM: xterm
      # default to being a preview deployment
      DEPLOY_ENV: Preview

    steps:
      - name: Detect Production Deploy
        if: github.event_name == 'push' && github.ref_name == 'main'
        run: |
          echo "DEPLOY_ENV=Production" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node (uses version in .nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - uses: actions/cache@v3
        with:
          path: |
            .cache
            public
          key: ${{ runner.os }}-build-v4-${{ hashFiles('**/yarn.lock') }}

      - name: Set custom Yarn cache path
        run: yarn config set cacheFolder .cache/yarn

      - name: Install dependencies
        run: yarn install --immutable
        env:
          # https://github.com/bahmutov/cypress-gh-action-split-install/blob/ca3916d4e7240ebdc337825d2d78eb354855464b/.github/workflows/tests.yml#L14-L18
          # https://github.com/marketplace/actions/cypress-io#custom-install
          CYPRESS_INSTALL_BINARY: 0

      - name: Running static type checking
        run: yarn typecheck

      - name: Building Websites
        run: yarn build
        env:
          ENABLE_SEARCH: 'true'
          NODE_OPTIONS: '--max-old-space-size=6144'
          GATSBY_EXPERIMENTAL_QUERY_CONCURRENCY: 32
          GATSBY_AUTH0_DOMAIN: ${{ secrets.GATSBY_AUTH0_DOMAIN }}
          GATSBY_AUTH0_CLIENTID: ${{ secrets.GATSBY_AUTH0_CLIENTID }}
          GATSBY_LEARNAPI_DOMAIN: ${{ secrets.GATSBY_LEARNAPI_DOMAIN }}
          
      - name: Running linters and tests
        run: |
          yarn jest --projects jest.{eslint,test}.config.js \
            --maxWorkers=3 \
            --reporters jest-silent-reporter

      - name: Run Writing Style check over Websites
        run: yarn lint:text

      - name: Deploy to Vercel (Production)
        if: ${{ env.DEPLOY_ENV == 'Production' }}
        id: deploy-to-vercel-production
        uses: amondnet/vercel-action@v25
        with:
          vercel-project-name: commercetools-docs-kit
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-args: '--prod'
          scope: commercetools
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}

      - name: Set DEPLOY_URL variable (Production)
        if: ${{ env.DEPLOY_ENV == 'Production' }}
        run: echo 'DEPLOY_URL=${{ steps.deploy-to-vercel-production.outputs.preview-url }}' >> "$GITHUB_ENV"

      - name: Initialize GitHub Deployment
        if: ${{ env.DEPLOY_ENV == 'Preview' }}
        uses: bobheadxi/deployments@v1.1.0
        id: start-deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ env.DEPLOY_ENV }}
          ref: ${{ github.head_ref }}

      - name: Deploy to Vercel (Preview)
        if: ${{ env.DEPLOY_ENV == 'Preview' }}
        id: deploy-to-vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-project-name: commercetools-docs-kit
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          scope: commercetools
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          # there are length restrictions to domains and only *.commercetools.vercel.app works
          # reliably for generated subdomains. No branch name domain because branch names can be long.
          alias-domains: |
            docskit-sha-${{ github.sha }}.commercetools.vercel.app
            docskit-pr-{{PR_NUMBER}}.commercetools.vercel.app

      - name: Set DEPLOY_URL variable (Preview)
        if: ${{ env.DEPLOY_ENV == 'Preview' }}
        run: echo 'DEPLOY_URL=${{ steps.deploy-to-vercel.outputs.preview-url }}' >> "$GITHUB_ENV"

      - name: Update GitHub Deployment Status
        if: ${{ env.DEPLOY_ENV == 'Preview' }}
        uses: bobheadxi/deployments@v1.1.0
        id: finish_deployment
        with:
          step: finish
          override: false
          auto_inactive: false
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          env: ${{ steps.start-deployment.outputs.env }}
          env_url: ${{ steps.deploy-to-vercel.outputs.preview-url }}
          deployment_id: ${{ steps.start-deployment.outputs.deployment_id }}

      - name: Running Visual Regression Tests
        run: yarn percy snapshot ./public
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_SMOKE_TESTS }}

      # https://github.com/bahmutov/cypress-gh-action-split-install/blob/ca3916d4e7240ebdc337825d2d78eb354855464b/.github/workflows/tests.yml#L23-L30
      # https://github.com/marketplace/actions/cypress-io#custom-install
      - name: Restoring Cypress cache
        # restore / cache the binary ourselves on Linux
        # see https://github.com/actions/cache
        id: cache-cypress
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/package.json') }}

      - name: Installing Cypress binary
        run: yarn cypress install && yarn cypress cache list

      - name: Running End-to-End tests
        run: yarn percy exec -- yarn test:e2e:docs-smoke-test --config baseUrl="${{ env.DEPLOY_URL }}"
        env:
          NODE_ENV: test
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_SMOKE_TESTS_E2E }}
          CYPRESS_CI: 'true'

      - name: Running API End-to-End tests
        run: yarn percy exec -- yarn test:e2e:api-docs-smoke-test --config baseUrl="${{ env.DEPLOY_URL }}"
        env:
          NODE_ENV: test
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_API_SMOKE_TESTS_E2E }}
          CYPRESS_CI: 'true'

      - name: Check local links including anchors
        if: ${{ env.DEPLOY_ENV == 'Preview' }}
        working-directory: public
        run: npx --quiet start-server-and-test 'npx --quiet http-server --silent -p 9000' 9000 'docker run --network=host -v "$(pwd)/../:/repo/" tennox/linkcheck --skip-file /repo/linkcheck-local-skip-list :9000'

  link-check:
    name: 'Check links'

    needs: build_deploy_test

    if: github.event_name != 'push' && github.ref_name != 'main'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check links
        uses: JustinBeckwith/linkinator-action@v1.10.0
        with:
          paths: https://docskit-sha-${{ github.sha }}.commercetools.vercel.app
          config: linkinator.remote.config.json
          markdown: false
          # the docs production domain has to be rewritten to the preview URL to allow new pages to be created without the link checker
          # erroring on the canonical URL of the new page. Known compromise to not find links that point to the absolute production URL
          # but the docs kit is automatically making those a relative URL in authored content so the impact is low.
          urlRewriteReplace: https://docskit-sha-${{ github.sha }}.commercetools.vercel.app
          urlRewriteSearch: https://docs.commercetools.com
