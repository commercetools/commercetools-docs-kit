const fs = require('fs');
const path = require('path');
const defaultOptions = require('./default-options');

const markdownComponentsFileName = 'markdown-components.js';
const addOnComponentsFileName = 'addon-components.js';
const addOnsFolderPath = 'src/@commercetools-docs/gatsby-theme-docs/overrides';
const markdownComponentsPath = path.join(
  addOnsFolderPath,
  markdownComponentsFileName
);
const addOnComponentsPath = path.join(
  addOnsFolderPath,
  addOnComponentsFileName
);
const gitignorePath = path.join(addOnsFolderPath, '.gitignore');

function bootstrapThemeAddOnsForMarkdownComponents(themeAddOnNames) {
  let addOnComponentsExport = `/* eslint-disable prettier/prettier */
/* eslint import/no-anonymous-default-export: [2, {"allowObject": true}] */
/* THIS IS AN AUTOGENERATED FILE, DO NOT EDIT DIRECTLY */`;
  themeAddOnNames.forEach((plugin, index) => {
    addOnComponentsExport += `\nimport * as components${index} from '${plugin}/shortcodes';`;
  });
  addOnComponentsExport += `\n
export default {
${themeAddOnNames.map((_, index) => `  ...components${index},`).join('\n')}
};
`;
  if (!fs.existsSync(addOnsFolderPath)) {
    fs.mkdirSync('src/@commercetools-docs/gatsby-theme-docs/overrides', {
      recursive: true,
    });
  }
  fs.writeFileSync(addOnComponentsPath, addOnComponentsExport, 'utf-8');
  fs.writeFileSync(gitignorePath, addOnComponentsFileName, 'utf-8');

  // If there is no `markdown-components.js` file yet, generate one with the import
  // from the `addon-components.js`.
  if (!fs.existsSync(markdownComponentsPath)) {
    const defaultMarkdownComponentsExport = `/* THIS IS AN AUTOGENERATED FILE. */

// You can edit this file and additionally inject custom components into MDX.
// However, do not forget to import the './${addOnComponentsFileName}' file!

import addonComponents from './${addOnComponentsFileName.replace('.js', '')}'

export default { ...addonComponents };
`;
    fs.writeFileSync(
      markdownComponentsPath,
      defaultMarkdownComponentsExport,
      'utf-8'
    );
  }
}

function bootstrapThemeAddOns({ reporter }, themeOptions) {
  const pluginOptions = { ...defaultOptions, ...themeOptions };
  const themeAddOnNames = pluginOptions.addOns.reduce(
    (allAddOnNames, pluginName) => {
      if (pluginName.startsWith('@commercetools-docs/gatsby-theme')) {
        return [...allAddOnNames, pluginName];
      }
      return allAddOnNames;
    },
    []
  );

  if (themeAddOnNames.length > 0) {
    reporter.info(`bootstrapping theme add-ons ${themeAddOnNames.toString()}`);
    bootstrapThemeAddOnsForMarkdownComponents(themeAddOnNames);
  }
}

module.exports = bootstrapThemeAddOns;
